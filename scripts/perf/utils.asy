// Find the comma-separated strings to use in the legend
string[] set_legends(string runlegs)
{
   string[] legends;
   bool myleg=((runlegs== "") ? false: true);
   bool flag=true;
   int n=-1;
   int lastpos=0;
   string legends[];
   if(myleg) {
      string runleg;
      while(flag) {
	 ++n;
	 int pos=find(runlegs,",",lastpos);
	 if(lastpos == -1) {runleg=""; flag=false;}
    
	 runleg=substr(runlegs,lastpos,pos-lastpos);

	 lastpos=pos > 0 ? pos+1 : -1;
	 if(flag) legends.push(runleg);
      }
   }
   return legends;
}

// Create an array from a comma-separated string
string[] listfromcsv(string input)
{
    string list[] = new string[];
    int n = -1;
    bool flag = true;
    int lastpos;
    while(flag) {
        ++n;
        int pos = find(input, ",", lastpos);
        string found;
        if(lastpos == -1) {
            flag = false;
            found = "";
        }
        found = substr(input, lastpos, pos - lastpos);
        if(flag) {
            list.push(found);
            lastpos = pos > 0 ? pos + 1 : -1;
        }
    }
    return list;
}


// Read the data from the output files generated by alltime.py.
void readfiles(string[] filelist, pair[][] xyval, pair[][] ylowhigh, bool bounds)
{
    for(int n = 0; n < filelist.length; ++n)
    {
        string filename = filelist[n];
        write(filename);
        bool moretoread = true;
        file fin = input(filename);
        while(moretoread) {
            real xval = fin; // x-length
            if(eof(fin)) {
                moretoread = false;
                break;
            }
            real yval = fin; // Number of data points
            xyval[n].push((xval, yval));

            if(bounds)
            {
                real ylow = fin;
                real yhigh = fin;
                ylowhigh[n].push((ylow, yhigh));
            }
        }
    }
}
